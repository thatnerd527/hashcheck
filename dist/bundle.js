(()=>{var e={417:e=>{"use strict";e.exports=require("crypto")},747:e=>{"use strict";e.exports=require("fs")},622:e=>{"use strict";e.exports=require("path")},58:e=>{"use strict";e.exports=require("readline")}},s={};function o(t){if(s[t])return s[t].exports;var r=s[t]={exports:{}};return e[t](r,r.exports,o),r.exports}(()=>{const e=o(417).createHash("sha256"),s=o(622),t=o(747);o(58).createInterface({input:process.stdin,output:process.stdout}).on("close",(function(){process.exit(0)}));var r=function(e,o){return process.stdout.write("Listing files.. :"+e+" "),process.stdout.cursorTo(0),files=t.readdirSync(e),o=o||[],files.forEach((function(i){t.statSync(s.join(e,i)).isDirectory()?o=r(s.join(e,i),o):o.push(s.join(e,i))})),o},n=[],c=[];"--help"==process.argv.slice(2)[0]&&(console.log("\nFile hash checker v1.0 by ThatNerd \nRunning this program without any parameteres will check all files (including subdirectories) and compare all of them against a known good hash. \n\n--generate - Will generate a new config that the program will test against\n    "),process.exit()),console.log("File hash checker v1.0 by ThatNerd"),function(){try{if(t.writeFileSync("test.tmp","abc"),"abc"!=t.readFileSync("test.tmp"))throw"File write error";t.unlinkSync("test.tmp"),function(){try{var o=JSON.parse(t.readFileSync("config.json"))||{ignore:[s.basename(__filename),"config.json"],correcthash:""}}catch(e){o={ignore:[s.basename(__filename),"config.json"],correcthash:""}}console.log("Listing files.."),r("./",n);var a=n.filter((function(e,s,t){return!o.ignore.includes(e)}));for(process.stdout.write("\n"),process.stdout.cursorTo(0),console.log("Hashing with SHA256..."),file={},i=0;i<a.length;i++)process.stdout.write("Hashing: "+a[i]+" "),process.stdout.cursorTo(0),e.update(t.readFileSync(a[i])),c.push(a[i]+e.copy().digest("base64"));process.stdout.write("\n"),e.update(Buffer.from(c)),hashedresult=e.digest("base64"),console.log("Result: "+hashedresult),"--generate"==process.argv.slice(2)[0]?((o={ignore:[],correcthash:""}).ignore.push(s.basename(__filename)),o.ignore.push("config.json"),o.correcthash=hashedresult,t.writeFileSync("config.json",JSON.stringify(o)),console.log("Config generated."),console.log("Press CTRL+C to exit this window.")):(console.log("Correct hash: "+o.correcthash),o.correcthash==hashedresult?(console.log("Congratulations, all of your files have been checked and is consistent with what ThatNerd sent you."),console.log("Press CTRL+C to exit this window.")):(console.log("Hmm, there is an inconsistency with one of the files, remember, adding or removing files will cause this."),console.log("Press CTRL+C to exit this window.")))}()}catch(e){console.log("ERROR: Unable to write. (please try again with administrator permissions.)"),console.log("Program halted. Press close or CTRL+C to close this window."),console.log(e)}}()})()})();